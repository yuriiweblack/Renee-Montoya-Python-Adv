Linux
1. Create `linux_lecture` directory and notes.txt file
2. Copy notes.txt file to linux_lecture directory
3. List the files in the current directory, in ‚Äúlong listing format‚Äù.
4. List all files, including hidden files, in the your home (~) directory, in reverse alphabetical order and long listing format.
5*. Rename the file notes.txt to new_notes.txt
Hint: Renaming is done using the same command as moving.
6. Remove the files linux_lecture/notes.txt and new_notes.txt. Note that your answer must be a single command and not multiple commands.
Hint: Many commands can accept more than one parameter.

Create homework.sh file under linux_lecture directory

7*. Set the file homework.sh to have a last-modified date of January 1, 2020, 4:15am.
Hint: The man page for the proper command describes the timestamp 'STAMP' format to use. Look for this!
Also note: Linux is case-sensitive when you are specifying file or directory names.
You can use a * (asterisk) as a ‚Äúwild-card‚Äù character to specify a group of files.
For example, *foo means all files whose names end with foo, and foo* means all files whose names begin with foo.
You can use a wildcard in the middle of a file name, such as foo*bar for all files that start with foo and end with bar.

Create hw.sh, hw1.sh, hw2.sh, hw1.txt under the linux_lecture directory

8. Find all the files only with the extension .txt in the current directory.
9. Copy all the text files (files whose names end with .txt) from the current folder to the new directory `lecture_new`
10. Write `echo 'linux_lecture'` to the homework.sh file by using echo.
11. Display the contents of homework.sh
12. Change the permissions to just write for current user and try to Display contents again.
13. Change the permission to rwx for current user only and try again.
13a. Execute the homework.sh
14. Write from 1 to 10 in each line in homework.sh by using text reader.
üîç Self Discovery: The head and tail commands output only the first or last few lines (respectively) of a file to the terminal.
15. Display only the first 7 lines of the file homework.sh from the current directory on the terminal.
16*. Create notes.sh with `ls` and make it executable
17*. Execute notes.sh

GIT
1. Create a folder called cursor_git
2. cd into the cursor_git folder.
3. Create a file called first.py.
4. Add first.py to the staging area.
5. Commit with the message "adding first.py".
6. Check out your commit with git log.
7. Create another file called second.py.
8. Add second.py to the staging area.
9. Commit with the message "adding second.py"
10. Remove the first.py file
11. Add this change to the staging area
12. Commit with the message "removing first.py"
13. Check out your commits using git log
14. Push your changes to remote
15. Create new branch from master called `first` (without checkout)
16. Create one more branch from master called `second` (with checkout to it)
17. Change the second.py file with "print('Hello')" string.
18. Stash you changes and checkout to first branch.
19. Checkout back and Stash Pop the changes.
20. Add your changes to the staging area
21. Commit with the message "Changing second.py".
22. Push your changes to remote
23. Checkout to first branch.
24. Change the second.py file with print("Cursor") string.
25. Add your changes to the staging area
26. Commit with the message "Changing second.py".
27. Push your changes to remote
28. Checkout to master branch
29*. Merge the changes from second branch
30*. Then merge the changes from first branch
31*. Resolve conflict and push the changes to remote